{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAChCG,EAAOJ,SAASC,cAAc,SAyBpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,EAAUS,MAAAR,IAEnBG,EAAO,C,SAACJ,EAAUS,MAAAR,GAAO,GAE1BA,EAAM,G,CAhCbS,QAAQC,IAAId,EAAOe,OACnBd,EAAKe,iBAAiB,UAAWC,IAC/BA,EAAEC,iBAMF,IAAIC,EAAaC,OAAOxB,EAAMmB,OAC9B,IAAK,IAAIM,EAAI,EAAGA,GAAKrB,EAAOe,MAAOM,IACjCnB,EAAcmB,EAAIF,GACfG,MAAK,EAACnB,SAAEA,EAAUS,MAAAW,MACjBC,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBvB,QAAiBoB,MAAU,IAEzEI,OAAM,EAACxB,SAAEA,EAAUS,MAAAgB,MACjBJ,EAAA9B,GAAS+B,OAAOI,QACd,sBAAoB1B,QAAeyB,MAAU,IAGpDT,GAAcC,OAAOrB,EAAKgB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector(\"[name='delay']\");\nconst step = document.querySelector(\"[name='step']\");\nconst amount = document.querySelector(\"[name='amount']\")\nconst form = document.querySelector(\".form\");\n\nconsole.log(amount.value);\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  // if (delay.value < 1 || step.value < 1 || amount.value < 1) {\n  //   Notiflix.Notify.failure(`❌ Rejected Value Please Enter a Positive Value`);\n  //   form.reset();\n  //   return;\n  // }\n  let delayValue = Number(delay.value);\n  for (let i = 1; i <= amount.value; i++) {\n    createPromise(i , delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay}) => {\n         Notiflix.Notify.failure(\n           `❌ Rejected promise ${position} in ${delay}ms`\n         );\n      });\n    delayValue += Number(step.value);\n  }\n})\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n\n  })\n\n}"],"names":["$guwAM","parcelRequire","$75aa520dfb7f3d3e$var$delay","document","querySelector","$75aa520dfb7f3d3e$var$step","$75aa520dfb7f3d3e$var$amount","$75aa520dfb7f3d3e$var$form","$75aa520dfb7f3d3e$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","console","log","value","addEventListener","e","preventDefault","delayValue","Number","i","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure"],"version":3,"file":"03-promises.bb7756ef.js.map"}